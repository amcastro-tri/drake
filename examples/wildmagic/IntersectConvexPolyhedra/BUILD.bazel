# -*- python -*-
# This file contains rules for Bazel; see drake/doc/bazel.rst.

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")
load("//tools/install:install_data.bzl", "install_data")

drake_cc_library(
    name = "convex_clipper",
    srcs = [
        "ConvexClipper.cpp",
        "ConvexPolyhedron.cpp",
        #"IntersectConvexPolyhedra.cpp",
        "MTEdge.cpp",
        "MTIEdge.cpp",
        "MTITriangle.cpp",
        "MTIVertex.cpp",
        "MTMesh.cpp",
        "MTTriangle.cpp",
        "MTVertex.cpp",
    ],
    hdrs = [
        "ConvexClipper.h",
        "ConvexPolyhedron.h",
        #"IntersectConvexPolyhedra.h",
        "MTEdge.h",
        "MTEdge.inl",
        "MTIEdge.h",
        "MTITriangle.h",
        "MTIVertex.h",
        "MTMesh.h",
        "MTMesh.inl",
        "MTTriangle.h",
        "MTTriangle.inl",
        "MTVertex.h",
        "MTVertex.inl",
        "UnorderedSet.h",
        "UnorderedSet.inl",
    ],
    # All the inlined code from Wm5 needs this or we get a build error.
    copts = [
        "-Wno-old-style-cast",
        "-Wno-error",
        "-Wno-deprecated",
        "-Wno-maybe-uninitialized",
        "-Wno-overloaded-virtual",
        "-Wno-extra",
    ],
    deps = [
        "@wildmagic",
    ],
)

drake_cc_binary(
    name = "intersect_convex_polyhedra",
    srcs = ["intersect_convex_polyhedra.cc"],
    # All the inlined code from Wm5 needs this or we get a build error.
    copts = [
        "-g",
        "-Wno-old-style-cast",
        "-Wno-error",
        "-Wno-deprecated",
        "-Wno-maybe-uninitialized",
        "-Wno-overloaded-virtual",
        "-Wno-extra",
    ],
    data = [":models"],
    deps = [        
        "//common:find_resource",
        "//math:geometric_transform",
        "//multibody/plant/volumetric_contact/wildmagic:convex_polyhedra",
        "//multibody/plant/volumetric_contact/load_objs:load_objs",
        ],
)

drake_cc_binary(
    name = "IntersectConvexPolyhedra",
    srcs = [
        "IntersectConvexPolyhedra.cpp",
        "IntersectConvexPolyhedra.h",
    ],
    # All the inlined code from Wm5 needs this or we get a build error.
    copts = [
        "-Wno-old-style-cast",
        "-Wno-error",
        "-Wno-deprecated",
        "-Wno-maybe-uninitialized",
        "-Wno-overloaded-virtual",
        "-Wno-extra",
    ],
    deps = [":convex_clipper"],
)

install_data()
add_lint_tests()
